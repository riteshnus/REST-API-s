swagger: '2.0'
info:
  description: >-
    This is a webservices to register teacher, student and other services .
  version: 1.0.0
  title: UFINITY Web Services
  contact:
    email: ritesh.nus@gmail.com
host: ec2-18-222-149-167.us-east-2.compute.amazonaws.com
basePath: /api
tags:
- name: "Registration"
  description: "Registration of student and teacher"
- name: "Common Student"
  description: "Common student for multiple teacher"
- name: "Suspend"
  description: "Suspend student"
- name: "Notification"
  description: "Send notification to students"
schemes:
  - http
paths:
  /registerteacher:
    post:
      tags:
        - Registration
      summary: Register Teacher
      description: Register teacher in database, give error if duplicate teacher add. Every teacher is unique by email
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: provide teacher email
          required: true
          schema:
            $ref: "#/definitions/registerteacher"
      responses:
        '204':
          description: successful operation
        400:
          description: "duplicate email"
  /register:
    post:
      tags:
        - Registration
      summary: Register Student
      description: Register student in database. First check if student exist, if not then insert new student. Also insert mapping of student and teacher.
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: provide teacher email and student email
          required: true
          schema:
            $ref: "#/definitions/register"
      responses:
        '204':
          description: successful operation
        400:
          description: "duplicate email"
  /commonstudents:
    get:
      tags:
        - Common Student
      summary: Finds common studnents
      description: Finds common studnents for provided teacher
      produces:
        - application/json
      parameters:
        - name: "teacher"
          in: "query"
          description: "teacher email"
          required: true
          type: "string"
      responses:
        '200':
          description: common students
          schema:
              $ref: '#/definitions/studentArray'
  /suspend:
    post:
      tags:
        - Suspend
      summary: Suspend student
      description: Suspend a student from the class
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: provide teacher email and student email
          required: true
          schema:
            $ref: "#/definitions/student"
      responses:
        '204':
          description: successful operation
  /retrievefornotifications:
    post:
      tags:
        - Notification
      summary: Find student of notification
      description: Find student of teacher to send notification
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: provide teacher email and student email
          required: true
          schema:
            $ref: "#/definitions/notification"
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/recipients'
definitions:
  string:
    type: string
    format: int64
    example: 'student@gmail.com'
  register:
    type: object
    required:
      - teacher
      - students
    properties:
      teacher:
        type: string
        format: int64
      students:
        type: array
        items:
          $ref: '#/definitions/string'
    example:
      teacher: xyz@abc.com
      students: ['abc@def.com']
  notification:
    type: object
    required:
      - teacher
      - notification
    properties:
      teacher:
        type: string
        format: int64
      notification:
        type: string
        format: int64
    example:
      teacher: xyz@abc.com
      notification: ['Hello students! @studentagnes@example.com @studentmiche@example.com']
  recipients:
    type: object
    required:
      - recipients
    properties:
      recipients:
        type: array
        items:
          $ref: '#/definitions/string'
    example:
      recipients: ['studentagnes@example.com','studentmiche@example.com']
  registerteacher:
    type: object
    required:
      - teacher
    properties:
      teacher:
        type: string
        format: int64
    example:
      teacher: xyz@abc.com
  studentArray:
    type: object
    required:
      - recipients
    properties:
      students:
        type: array
        items:
          $ref: '#/definitions/string'
    example:
      students: ['abc@def.com','efg@xyz.com']
  student:
    type: object
    properties:
      student:
        type: string
        format: int64
    example:
      student: 'abc@def.com'
